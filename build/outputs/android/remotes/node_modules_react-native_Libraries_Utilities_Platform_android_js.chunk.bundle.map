{"version":3,"file":"node_modules_react-native_Libraries_Utilities_Platform_android_js.chunk.bundle","mappings":";;;;;;;;uFAWA,2LAA0E,ugCAwB1DA,mBAAmB,CAACC,YAAY,CAC9C,mBAAmB,CACpB;;;;;;;;;;qKC3BD,6MASA,GAAMC,SAAQ,CAAG,CACfC,WAAW,CAAE,IAAI,CACjBC,EAAE,CAAE,SAAS,CAEb,GAAIC,QAAO,EAAW,CACpB,MAAO,KAAI,CAACC,SAAS,CAACD,OAAO,CAC/B,CAAC,CAED,GAAIC,UAAS,EAiBV,CACD,GAAI,IAAI,CAACH,WAAW,EAAI,IAAI,CAAE,CAC5B,IAAI,CAACA,WAAW,CAAGI,uCAA8B,CAACC,YAAY,EAAE,CAClE,CACA,MAAO,KAAI,CAACL,WAAW,CACzB,CAAC,CAED,GAAIM,UAAS,EAAY,CACvB,GAAIC,IAAO,CAAE,CACX,MAAO,KAAI,CAACJ,SAAS,CAACG,SAAS,CACjC,CACA,MAAO,MAAK,CACd,CAAC,CAED,GAAIE,KAAI,EAAY,CAClB,MAAO,KAAI,CAACL,SAAS,CAACM,MAAM,GAAK,IAAI,CACvC,CAAC,CACDC,MAAM,CAAE,gBAAUC,IAAiC,QACjD,SAAS,EAAIA,KAAI,CAEbA,IAAI,CAACC,OAAO,CACZ,QAAQ,EAAID,KAAI,CAEhBA,IAAI,CAACE,MAAM,CAEXF,IAAI,CAACG,OAAO,EACpB,CAAC,CAEDC,MAAM,CAACC,OAAO,CAAGjB,QAAQ","sources":["webpack:///./node_modules/react-native/Libraries/Utilities/NativePlatformConstantsAndroid.js","webpack:///./node_modules/react-native/Libraries/Utilities/Platform.android.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    isTesting: boolean,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch: number,\n      prerelease: ?number,\n    |},\n    Version: number,\n    Release: string,\n    Serial: string,\n    Fingerprint: string,\n    Model: string,\n    ServerHost?: string,\n    uiMode: string,\n    Brand: string,\n    Manufacturer: string,\n  |};\n  +getAndroidID: () => string;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'PlatformConstants',\n): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport NativePlatformConstantsAndroid from './NativePlatformConstantsAndroid';\n\nexport type PlatformSelectSpec<A, N, D> = {\n  android?: A,\n  native?: N,\n  default?: D,\n  ...\n};\n\nconst Platform = {\n  __constants: null,\n  OS: 'android',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version(): number {\n    return this.constants.Version;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants(): {|\n    isTesting: boolean,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch: number,\n      prerelease: ?number,\n    |},\n    Version: number,\n    Release: string,\n    Serial: string,\n    Fingerprint: string,\n    Model: string,\n    ServerHost?: string,\n    uiMode: string,\n    Brand: string,\n    Manufacturer: string,\n  |} {\n    if (this.__constants == null) {\n      this.__constants = NativePlatformConstantsAndroid.getConstants();\n    }\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting(): boolean {\n    if (__DEV__) {\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV(): boolean {\n    return this.constants.uiMode === 'tv';\n  },\n  select: <A, N, D>(spec: PlatformSelectSpec<A, N, D>): A | N | D =>\n    'android' in spec\n      ? // $FlowFixMe[incompatible-return]\n        spec.android\n      : 'native' in spec\n      ? // $FlowFixMe[incompatible-return]\n        spec.native\n      : // $FlowFixMe[incompatible-return]\n        spec.default,\n};\n\nmodule.exports = Platform;\n"],"names":["TurboModuleRegistry","getEnforcing","Platform","__constants","OS","Version","constants","NativePlatformConstantsAndroid","getConstants","isTesting","__DEV__","isTV","uiMode","select","spec","android","native","default","module","exports"],"sourceRoot":""}