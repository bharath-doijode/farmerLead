{"version":3,"file":"node_modules_react-native_Libraries_NativeComponent_NativeComponentRegistryUnstable_js.chunk.bundle","mappings":";;;;;;;;iHAOA,GAAIA,sBAA2C,CAAG,GAAIC,IAAG,EAAE,CAQpD,QAASC,sBAAqB,CAACC,IAAY,CAAW,CAC3D,GAAIC,mBAAkB,CAAGJ,qBAAqB,CAACK,GAAG,CAACF,IAAI,CAAC,CACxD,GAAIC,kBAAkB,EAAI,IAAI,CAAE,CAC9B,GAAIE,qBAAM,CAACC,uCAAuC,CAAE,CAClDH,kBAAkB,CAAGE,qBAAM,CAACC,uCAAuC,CAACJ,IAAI,CAAC,CACzEH,qBAAqB,CAACQ,GAAG,CAACL,IAAI,CAAEC,kBAAkB,CAAC,CACrD,CAAC,IAAM,CACL,+BAAgCD,IAAI,yCACtC,CACF,CACA,MAAOC,mBAAkB,CAC3B","sources":["webpack:///./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet componentNameToExists: Map<string, boolean> = new Map();\n\n/**\n * Unstable API. Do not use!\n *\n * This method returns if the component with name received as a parameter\n * is registed in the native platform.\n */\nexport function unstable_hasComponent(name: string): boolean {\n  let hasNativeComponent = componentNameToExists.get(name);\n  if (hasNativeComponent == null) {\n    if (global.__nativeComponentRegistry__hasComponent) {\n      hasNativeComponent = global.__nativeComponentRegistry__hasComponent(name);\n      componentNameToExists.set(name, hasNativeComponent);\n    } else {\n      throw `unstable_hasComponent('${name}'): Global function is not registered`;\n    }\n  }\n  return hasNativeComponent;\n}\n"],"names":["componentNameToExists","Map","unstable_hasComponent","name","hasNativeComponent","get","global","__nativeComponentRegistry__hasComponent","set"],"sourceRoot":""}