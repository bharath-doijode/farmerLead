{"version":3,"file":"vendors-node_modules_react-native_Libraries_NativeComponent_NativeComponentRegistry_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.android.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistry.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/PlatformBaseViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/StaticViewConfigValidator.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfig.js","webpack:///./node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js","webpack:///./node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js","webpack:///./node_modules/react-native/Libraries/Utilities/verifyComponentAttributeEquivalence.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport {DynamicallyInjectedByGestureHandler} from './ViewConfigIgnore';\nimport ReactNativeStyleAttributes from '../Components/View/ReactNativeStyleAttributes';\nimport type {PartialViewConfigWithoutName} from './PlatformBaseViewConfig';\n\nconst bubblingEventTypes = {\n  // Bubbling events from UIManagerModuleConstants.java\n  topChange: {\n    phasedRegistrationNames: {\n      captured: 'onChangeCapture',\n      bubbled: 'onChange',\n    },\n  },\n  topSelect: {\n    phasedRegistrationNames: {\n      captured: 'onSelectCapture',\n      bubbled: 'onSelect',\n    },\n  },\n  topTouchEnd: {\n    phasedRegistrationNames: {\n      captured: 'onTouchEndCapture',\n      bubbled: 'onTouchEnd',\n    },\n  },\n  topTouchCancel: {\n    phasedRegistrationNames: {\n      captured: 'onTouchCancelCapture',\n      bubbled: 'onTouchCancel',\n    },\n  },\n  topTouchStart: {\n    phasedRegistrationNames: {\n      captured: 'onTouchStartCapture',\n      bubbled: 'onTouchStart',\n    },\n  },\n  topTouchMove: {\n    phasedRegistrationNames: {\n      captured: 'onTouchMoveCapture',\n      bubbled: 'onTouchMove',\n    },\n  },\n\n  // Experimental/Work in Progress Pointer Events (not yet ready for use)\n  topPointerCancel: {\n    phasedRegistrationNames: {\n      captured: 'onPointerCancelCapture',\n      bubbled: 'onPointerCancel',\n    },\n  },\n  topPointerDown: {\n    phasedRegistrationNames: {\n      captured: 'onPointerDownCapture',\n      bubbled: 'onPointerDown',\n    },\n  },\n  topPointerEnter: {\n    phasedRegistrationNames: {\n      captured: 'onPointerEnterCapture',\n      bubbled: 'onPointerEnter',\n      skipBubbling: true,\n    },\n  },\n  topPointerLeave: {\n    phasedRegistrationNames: {\n      captured: 'onPointerLeaveCapture',\n      bubbled: 'onPointerLeave',\n      skipBubbling: true,\n    },\n  },\n  topPointerMove: {\n    phasedRegistrationNames: {\n      captured: 'onPointerMoveCapture',\n      bubbled: 'onPointerMove',\n    },\n  },\n  topPointerUp: {\n    phasedRegistrationNames: {\n      captured: 'onPointerUpCapture',\n      bubbled: 'onPointerUp',\n    },\n  },\n};\n\nconst directEventTypes = {\n  topAccessibilityAction: {\n    registrationName: 'onAccessibilityAction',\n  },\n  onGestureHandlerEvent: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerEvent',\n  }),\n  onGestureHandlerStateChange: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerStateChange',\n  }),\n\n  // Direct events from UIManagerModuleConstants.java\n  topContentSizeChange: {\n    registrationName: 'onContentSizeChange',\n  },\n  topScrollBeginDrag: {\n    registrationName: 'onScrollBeginDrag',\n  },\n  topMessage: {\n    registrationName: 'onMessage',\n  },\n  topSelectionChange: {\n    registrationName: 'onSelectionChange',\n  },\n  topLoadingFinish: {\n    registrationName: 'onLoadingFinish',\n  },\n  topMomentumScrollEnd: {\n    registrationName: 'onMomentumScrollEnd',\n  },\n  topClick: {\n    registrationName: 'onClick',\n  },\n  topLoadingStart: {\n    registrationName: 'onLoadingStart',\n  },\n  topLoadingError: {\n    registrationName: 'onLoadingError',\n  },\n  topMomentumScrollBegin: {\n    registrationName: 'onMomentumScrollBegin',\n  },\n  topScrollEndDrag: {\n    registrationName: 'onScrollEndDrag',\n  },\n  topScroll: {\n    registrationName: 'onScroll',\n  },\n  topLayout: {\n    registrationName: 'onLayout',\n  },\n};\n\nconst validAttributesForNonEventProps = {\n  // @ReactProps from BaseViewManager\n  backgroundColor: {process: require('../StyleSheet/processColor')},\n  transform: true,\n  opacity: true,\n  elevation: true,\n  shadowColor: {process: require('../StyleSheet/processColor')},\n  zIndex: true,\n  renderToHardwareTextureAndroid: true,\n  testID: true,\n  nativeID: true,\n  accessibilityLabelledBy: true,\n  accessibilityLabel: true,\n  accessibilityHint: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityActions: true,\n  accessibilityValue: true,\n  importantForAccessibility: true,\n  rotation: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true,\n  accessibilityLiveRegion: true,\n\n  // @ReactProps from LayoutShadowNode\n  width: true,\n  minWidth: true,\n  collapsable: true,\n  maxWidth: true,\n  height: true,\n  minHeight: true,\n  maxHeight: true,\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  aspectRatio: true,\n  flexDirection: true,\n  flexWrap: true,\n  alignSelf: true,\n  alignItems: true,\n  alignContent: true,\n  justifyContent: true,\n  overflow: true,\n  display: true,\n\n  margin: true,\n  marginVertical: true,\n  marginHorizontal: true,\n  marginStart: true,\n  marginEnd: true,\n  marginTop: true,\n  marginBottom: true,\n  marginLeft: true,\n  marginRight: true,\n\n  padding: true,\n  paddingVertical: true,\n  paddingHorizontal: true,\n  paddingStart: true,\n  paddingEnd: true,\n  paddingTop: true,\n  paddingBottom: true,\n  paddingLeft: true,\n  paddingRight: true,\n\n  borderWidth: true,\n  borderStartWidth: true,\n  borderEndWidth: true,\n  borderTopWidth: true,\n  borderBottomWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n\n  start: true,\n  end: true,\n  left: true,\n  right: true,\n  top: true,\n  bottom: true,\n\n  position: true,\n\n  style: ReactNativeStyleAttributes,\n};\n\n// Props for bubbling and direct events\nconst validAttributesForEventProps = {\n  onLayout: true,\n\n  // PanResponder handlers\n  onMoveShouldSetResponder: true,\n  onMoveShouldSetResponderCapture: true,\n  onStartShouldSetResponder: true,\n  onStartShouldSetResponderCapture: true,\n  onResponderGrant: true,\n  onResponderReject: true,\n  onResponderStart: true,\n  onResponderEnd: true,\n  onResponderRelease: true,\n  onResponderMove: true,\n  onResponderTerminate: true,\n  onResponderTerminationRequest: true,\n  onShouldBlockNativeResponder: true,\n\n  // Touch events\n  onTouchStart: true,\n  onTouchMove: true,\n  onTouchEnd: true,\n  onTouchCancel: true,\n\n  // Pointer events\n  onPointerEnter: true,\n  onPointerLeave: true,\n  onPointerMove: true,\n};\n\n/**\n * On Android, Props are derived from a ViewManager and its ShadowNode.\n *\n * Where did we find these base platform props from?\n * - Nearly all component ViewManagers descend from BaseViewManager,\n * - and BaseViewManagers' ShadowNodes descend from LayoutShadowNode.\n * - Also, all components inherit ViewConfigs from UIManagerModuleConstants.java.\n *\n * So, these ViewConfigs are generated from LayoutShadowNode and BaseViewManager.\n */\nconst PlatformBaseViewConfigAndroid: PartialViewConfigWithoutName = {\n  directEventTypes,\n  bubblingEventTypes,\n  validAttributes: {\n    ...validAttributesForNonEventProps,\n    ...validAttributesForEventProps,\n  },\n};\n\nexport default PlatformBaseViewConfigAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport * as StaticViewConfigValidator from './StaticViewConfigValidator';\nimport {createViewConfig} from './ViewConfig';\nimport UIManager from '../ReactNative/UIManager';\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\nimport ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';\nimport getNativeComponentAttributes from '../ReactNative/getNativeComponentAttributes';\nimport verifyComponentAttributeEquivalence from '../Utilities/verifyComponentAttributeEquivalence';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nlet getRuntimeConfig;\n\n/**\n * Configures a function that is called to determine whether a given component\n * should be registered using reflection of the native component at runtime.\n *\n * The provider should return null if the native component is unavailable in\n * the current environment.\n */\nexport function setRuntimeConfigProvider(\n  runtimeConfigProvider: (name: string) => ?{\n    native: boolean,\n    strict: boolean,\n    verify: boolean,\n  },\n): void {\n  invariant(\n    getRuntimeConfig == null,\n    'NativeComponentRegistry.setRuntimeConfigProvider() called more than once.',\n  );\n  getRuntimeConfig = runtimeConfigProvider;\n}\n\n/**\n * Gets a `NativeComponent` that can be rendered by React Native.\n *\n * The supplied `viewConfigProvider` may or may not be invoked and utilized,\n * depending on how `setRuntimeConfigProvider` is configured.\n */\nexport function get<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): HostComponent<Config> {\n  ReactNativeViewConfigRegistry.register(name, () => {\n    const {native, strict, verify} = getRuntimeConfig?.(name) ?? {\n      native: true,\n      strict: false,\n      verify: false,\n    };\n\n    const viewConfig = native\n      ? getNativeComponentAttributes(name)\n      : createViewConfig(viewConfigProvider());\n\n    if (verify) {\n      const nativeViewConfig = native\n        ? viewConfig\n        : getNativeComponentAttributes(name);\n      const staticViewConfig = native\n        ? createViewConfig(viewConfigProvider())\n        : viewConfig;\n\n      if (strict) {\n        const validationOutput = StaticViewConfigValidator.validate(\n          name,\n          nativeViewConfig,\n          staticViewConfig,\n        );\n\n        if (validationOutput.type === 'invalid') {\n          console.error(\n            StaticViewConfigValidator.stringifyValidationResult(\n              name,\n              validationOutput,\n            ),\n          );\n        }\n      } else {\n        verifyComponentAttributeEquivalence(nativeViewConfig, staticViewConfig);\n      }\n    }\n\n    return viewConfig;\n  });\n\n  // $FlowFixMe[incompatible-return] `NativeComponent` is actually string!\n  return name;\n}\n\n/**\n * Same as `NativeComponentRegistry.get(...)`, except this will check either\n * the `setRuntimeConfigProvider` configuration or use native reflection (slow)\n * to determine whether this native component is available.\n *\n * If the native component is not available, a stub component is returned. Note\n * that the return value of this is not `HostComponent` because the returned\n * component instance is not guaranteed to have native methods.\n */\nexport function getWithFallback_DEPRECATED<Config>(\n  name: string,\n  viewConfigProvider: () => PartialViewConfig,\n): React.AbstractComponent<Config> {\n  if (getRuntimeConfig == null) {\n    // `getRuntimeConfig == null` when static view configs are disabled\n    // If `setRuntimeConfigProvider` is not configured, use native reflection.\n    if (hasNativeViewConfig(name)) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  } else {\n    // If there is no runtime config, then the native component is unavailable.\n    if (getRuntimeConfig(name) != null) {\n      return get<Config>(name, viewConfigProvider);\n    }\n  }\n\n  const FallbackNativeComponent = function (props: Config): React.Node {\n    return null;\n  };\n  FallbackNativeComponent.displayName = `Fallback(${name})`;\n  return FallbackNativeComponent;\n}\n\nfunction hasNativeViewConfig(name: string): boolean {\n  invariant(getRuntimeConfig == null, 'Unexpected invocation!');\n  return UIManager.getViewManagerConfig(name) != null;\n}\n\n/**\n * Unstable API. Do not use!\n *\n * This method returns if there is a StaticViewConfig registered for the\n * component name received as a parameter.\n */\nexport function unstable_hasStaticViewConfig(name: string): boolean {\n  const {native} = getRuntimeConfig?.(name) ?? {\n    native: true,\n  };\n  return !native;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {PartialViewConfig} from '../Renderer/shims/ReactNativeTypes';\nimport BaseViewConfig from './BaseViewConfig';\n\nexport type PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst PlatformBaseViewConfig: PartialViewConfigWithoutName = BaseViewConfig;\n\n// In Wilde/FB4A, use RNHostComponentListRoute in Bridge mode to verify\n// whether the JS props defined here match the native props defined\n// in RCTViewManagers in iOS, and ViewManagers in Android.\nexport default PlatformBaseViewConfig;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\nimport {isIgnored} from './ViewConfigIgnore';\n\nexport type Difference =\n  | {\n      type: 'missing',\n      path: Array<string>,\n      nativeValue: mixed,\n    }\n  | {\n      type: 'unequal',\n      path: Array<string>,\n      nativeValue: mixed,\n      staticValue: mixed,\n    }\n  | {\n      type: 'unexpected',\n      path: Array<string>,\n      staticValue: mixed,\n    };\n\nexport type ValidationResult = ValidResult | InvalidResult;\ntype ValidResult = {\n  type: 'valid',\n};\ntype InvalidResult = {\n  type: 'invalid',\n  differences: Array<Difference>,\n};\n\n/**\n * During the migration from native view configs to static view configs, this is\n * used to validate that the two are equivalent.\n */\nexport function validate(\n  name: string,\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n): ValidationResult {\n  const differences = [];\n  accumulateDifferences(\n    differences,\n    [],\n    {\n      bubblingEventTypes: nativeViewConfig.bubblingEventTypes,\n      directEventTypes: nativeViewConfig.directEventTypes,\n      uiViewClassName: nativeViewConfig.uiViewClassName,\n      validAttributes: nativeViewConfig.validAttributes,\n    },\n    {\n      bubblingEventTypes: staticViewConfig.bubblingEventTypes,\n      directEventTypes: staticViewConfig.directEventTypes,\n      uiViewClassName: staticViewConfig.uiViewClassName,\n      validAttributes: staticViewConfig.validAttributes,\n    },\n  );\n\n  if (differences.length === 0) {\n    return {type: 'valid'};\n  }\n\n  return {\n    type: 'invalid',\n    differences,\n  };\n}\n\nexport function stringifyValidationResult(\n  name: string,\n  validationResult: InvalidResult,\n): string {\n  const {differences} = validationResult;\n  return [\n    `StaticViewConfigValidator: Invalid static view config for '${name}'.`,\n    '',\n    ...differences.map(difference => {\n      const {type, path} = difference;\n      switch (type) {\n        case 'missing':\n          return `- '${path.join('.')}' is missing.`;\n        case 'unequal':\n          return `- '${path.join('.')}' is the wrong value.`;\n        case 'unexpected':\n          return `- '${path.join('.')}' is present but not expected to be.`;\n      }\n    }),\n    '',\n  ].join('\\n');\n}\n\nfunction accumulateDifferences(\n  differences: Array<Difference>,\n  path: Array<string>,\n  nativeObject: {...},\n  staticObject: {...},\n): void {\n  for (const nativeKey in nativeObject) {\n    const nativeValue = nativeObject[nativeKey];\n\n    if (!staticObject.hasOwnProperty(nativeKey)) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'missing',\n        nativeValue,\n      });\n      continue;\n    }\n\n    const staticValue = staticObject[nativeKey];\n\n    const nativeValueIfObject = ifObject(nativeValue);\n    if (nativeValueIfObject != null) {\n      const staticValueIfObject = ifObject(staticValue);\n      if (staticValueIfObject != null) {\n        path.push(nativeKey);\n        accumulateDifferences(\n          differences,\n          path,\n          nativeValueIfObject,\n          staticValueIfObject,\n        );\n        path.pop();\n        continue;\n      }\n    }\n\n    if (nativeValue !== staticValue) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'unequal',\n        nativeValue,\n        staticValue,\n      });\n    }\n  }\n\n  for (const staticKey in staticObject) {\n    if (\n      !nativeObject.hasOwnProperty(staticKey) &&\n      !isIgnored(staticObject[staticKey])\n    ) {\n      differences.push({\n        path: [...path, staticKey],\n        type: 'unexpected',\n        staticValue: staticObject[staticKey],\n      });\n    }\n  }\n}\n\nfunction ifObject(value: mixed): ?{...} {\n  return typeof value === 'object' && !Array.isArray(value) ? value : null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  PartialViewConfig,\n  ViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\nimport PlatformBaseViewConfig from './PlatformBaseViewConfig';\n\n/**\n * Creates a complete `ViewConfig` from a `PartialViewConfig`.\n */\nexport function createViewConfig(\n  partialViewConfig: PartialViewConfig,\n): ViewConfig {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(\n      PlatformBaseViewConfig.bubblingEventTypes,\n      partialViewConfig.bubblingEventTypes,\n    ),\n    directEventTypes: composeIndexers(\n      PlatformBaseViewConfig.directEventTypes,\n      partialViewConfig.directEventTypes,\n    ),\n    validAttributes: composeIndexers(\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      PlatformBaseViewConfig.validAttributes,\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      partialViewConfig.validAttributes,\n    ),\n  };\n}\n\nfunction composeIndexers<T>(\n  maybeA: ?{+[string]: T},\n  maybeB: ?{+[string]: T},\n): {+[string]: T} {\n  return maybeA == null || maybeB == null\n    ? maybeA ?? maybeB ?? {}\n    : {...maybeA, ...maybeB};\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nconst ignoredViewConfigProps = new WeakSet<{...}>();\n\n/**\n * Decorates ViewConfig values that are dynamically injected by the library,\n * react-native-gesture-handler. (T45765076)\n */\nexport function DynamicallyInjectedByGestureHandler<T: {...}>(object: T): T {\n  ignoredViewConfigProps.add(object);\n  return object;\n}\n\n/**\n * On iOS, ViewManager event declarations generate {eventName}: true entries\n * in ViewConfig valueAttributes. These entries aren't generated for Android.\n * This annotation allows Static ViewConfigs to insert these entries into\n * iOS but not Android.\n *\n * In the future, we want to remove this platform-inconsistency. We want\n * to set RN$ViewConfigEventValidAttributesDisabled = true server-side,\n * so that iOS does not generate validAttributes from event props in iOS RCTViewManager,\n * since Android does not generate validAttributes from events props in Android ViewManager.\n *\n * TODO(T110872225): Remove this logic, after achieving platform-consistency\n */\nexport function ConditionallyIgnoredEventHandlers<T: {[name: string]: true}>(\n  value: T,\n): T | void {\n  if (\n    Platform.OS === 'ios' &&\n    !(global.RN$ViewConfigEventValidAttributesDisabled === true)\n  ) {\n    return value;\n  }\n  return undefined;\n}\n\nexport function isIgnored(value: mixed): boolean {\n  if (typeof value === 'object' && value != null) {\n    return ignoredViewConfigProps.has(value);\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @flow strict-local\n * @generated SignedSource<<a5b40ebf1f5b17d6dc83479c1c597566>>\n *\n * This file was sync'd from the facebook/react repository.\n */\n\n'use strict';\n\nimport {type ViewConfig} from './ReactNativeTypes';\nimport invariant from 'invariant';\n\n// Event configs\nconst customBubblingEventTypes: {\n  [eventName: string]: $ReadOnly<{|\n    phasedRegistrationNames: $ReadOnly<{|\n      captured: string,\n      bubbled: string,\n      skipBubbling?: ?boolean,\n    |}>,\n  |}>,\n  ...,\n} = {};\nconst customDirectEventTypes: {\n  [eventName: string]: $ReadOnly<{|\n    registrationName: string,\n  |}>,\n  ...,\n} = {};\n\nexports.customBubblingEventTypes = customBubblingEventTypes;\nexports.customDirectEventTypes = customDirectEventTypes;\n\nconst viewConfigCallbacks = new Map();\nconst viewConfigs = new Map();\n\nfunction processEventTypes(viewConfig: ViewConfig): void {\n  const {bubblingEventTypes, directEventTypes} = viewConfig;\n\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (const topLevelType in directEventTypes) {\n        invariant(\n          bubblingEventTypes[topLevelType] == null,\n          'Event cannot be both direct and bubbling: %s',\n          topLevelType,\n        );\n      }\n    }\n  }\n\n  if (bubblingEventTypes != null) {\n    for (const topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[topLevelType] == null) {\n        customBubblingEventTypes[topLevelType] =\n          bubblingEventTypes[topLevelType];\n      }\n    }\n  }\n\n  if (directEventTypes != null) {\n    for (const topLevelType in directEventTypes) {\n      if (customDirectEventTypes[topLevelType] == null) {\n        customDirectEventTypes[topLevelType] = directEventTypes[topLevelType];\n      }\n    }\n  }\n}\n\n/**\n * Registers a native view/component by name.\n * A callback is provided to load the view config from UIManager.\n * The callback is deferred until the view is actually rendered.\n */\nexports.register = function(name: string, callback: () => ViewConfig): string {\n  invariant(\n    !viewConfigCallbacks.has(name),\n    'Tried to register two views with the same name %s',\n    name,\n  );\n  invariant(\n    typeof callback === 'function',\n    'View config getter callback for component `%s` must be a function (received `%s`)',\n    name,\n    callback === null ? 'null' : typeof callback,\n  );\n  viewConfigCallbacks.set(name, callback);\n  return name;\n};\n\n/**\n * Retrieves a config for the specified view.\n * If this is the first time the view has been used,\n * This configuration will be lazy-loaded from UIManager.\n */\nexports.get = function(name: string): ViewConfig {\n  let viewConfig;\n  if (!viewConfigs.has(name)) {\n    const callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(\n        false,\n        'View config getter callback for component `%s` must be a function (received `%s`).%s',\n        name,\n        callback === null ? 'null' : typeof callback,\n        typeof name[0] === 'string' && /[a-z]/.test(name[0])\n          ? ' Make sure to start component names with a capital letter.'\n          : '',\n      );\n    }\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n\n    // Clear the callback after the config is set so that\n    // we don't mask any errors during registration.\n    viewConfigCallbacks.set(name, null);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport PlatformBaseViewConfig from '../NativeComponent/PlatformBaseViewConfig';\nimport {type ViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nconst IGNORED_KEYS = ['transform', 'hitSlop'];\n\n/**\n * The purpose of this function is to validate that the view config that\n * native exposes for a given view manager is the same as the view config\n * that is specified for that view manager in JS.\n *\n * In order to improve perf, we want to avoid calling into native to get\n * the view config when each view manager is used. To do this, we are moving\n * the configs to JS. In the future we will use these JS based view configs\n * to codegen the view manager on native to ensure they stay in sync without\n * this runtime check.\n *\n * If this function fails, that likely means a change was made to the native\n * view manager without updating the JS config as well. Ideally you can make\n * that direct change to the JS config. If you don't know what the differences\n * are, the best approach I've found is to create a view that prints\n * the return value of getNativeComponentAttributes, and then copying that\n * text and pasting it back into JS:\n * <Text selectable={true}>{JSON.stringify(getNativeComponentAttributes('RCTView'))}</Text>\n *\n * This is meant to be a stopgap until the time comes when we only have a\n * single source of truth. I wonder if this message will still be here two\n * years from now...\n */\nexport default function verifyComponentAttributeEquivalence(\n  nativeViewConfig: ViewConfig,\n  staticViewConfig: ViewConfig,\n) {\n  for (const prop of [\n    'validAttributes',\n    'bubblingEventTypes',\n    'directEventTypes',\n  ]) {\n    const diff = Object.keys(\n      lefthandObjectDiff(nativeViewConfig[prop], staticViewConfig[prop]),\n    );\n\n    if (diff.length > 0) {\n      const name =\n        staticViewConfig.uiViewClassName ?? nativeViewConfig.uiViewClassName;\n      console.error(\n        `'${name}' has a view config that does not match native. ` +\n          `'${prop}' is missing: ${diff.join(', ')}`,\n      );\n    }\n  }\n}\n\n// Return the different key-value pairs of the right object, by iterating through the keys in the left object\n// Note it won't return a difference where a key is missing in the left but exists the right.\nfunction lefthandObjectDiff(leftObj: Object, rightObj: Object): Object {\n  const differentKeys: {[string]: any | {...}} = {};\n\n  function compare(leftItem: any, rightItem: any, key: string) {\n    if (typeof leftItem !== typeof rightItem && leftItem != null) {\n      differentKeys[key] = rightItem;\n      return;\n    }\n\n    if (typeof leftItem === 'object') {\n      const objDiff = lefthandObjectDiff(leftItem, rightItem);\n      if (Object.keys(objDiff).length > 1) {\n        differentKeys[key] = objDiff;\n      }\n      return;\n    }\n\n    if (leftItem !== rightItem) {\n      differentKeys[key] = rightItem;\n      return;\n    }\n  }\n\n  for (const key in leftObj) {\n    if (IGNORED_KEYS.includes(key)) {\n      continue;\n    }\n\n    if (!rightObj) {\n      differentKeys[key] = {};\n    } else if (leftObj.hasOwnProperty(key)) {\n      compare(leftObj[key], rightObj[key], key);\n    }\n  }\n\n  return differentKeys;\n}\n\nexport function getConfigWithoutViewProps(\n  viewConfig: ViewConfig,\n  propName: string,\n): {...} {\n  if (!viewConfig[propName]) {\n    return {};\n  }\n\n  return Object.keys(viewConfig[propName])\n    .filter(prop => !PlatformBaseViewConfig[propName][prop])\n    .reduce<{[string]: any}>((obj, prop) => {\n      obj[prop] = viewConfig[propName][prop];\n      return obj;\n    }, {});\n}\n\nexport function stringifyViewConfig(viewConfig: any): string {\n  return JSON.stringify(\n    viewConfig,\n    (key, val) => {\n      if (typeof val === 'function') {\n        return `ƒ ${val.name}`;\n      }\n      return val;\n    },\n    2,\n  );\n}\n"],"names":["bubblingEventTypes","topChange","phasedRegistrationNames","captured","bubbled","topSelect","topTouchEnd","topTouchCancel","topTouchStart","topTouchMove","topPointerCancel","topPointerDown","topPointerEnter","skipBubbling","topPointerLeave","topPointerMove","topPointerUp","directEventTypes","topAccessibilityAction","registrationName","onGestureHandlerEvent","DynamicallyInjectedByGestureHandler","onGestureHandlerStateChange","topContentSizeChange","topScrollBeginDrag","topMessage","topSelectionChange","topLoadingFinish","topMomentumScrollEnd","topClick","topLoadingStart","topLoadingError","topMomentumScrollBegin","topScrollEndDrag","topScroll","topLayout","validAttributesForNonEventProps","backgroundColor","process","require","transform","opacity","elevation","shadowColor","zIndex","renderToHardwareTextureAndroid","testID","nativeID","accessibilityLabelledBy","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","accessibilityValue","importantForAccessibility","rotation","scaleX","scaleY","translateX","translateY","accessibilityLiveRegion","width","minWidth","collapsable","maxWidth","height","minHeight","maxHeight","flex","flexGrow","flexShrink","flexBasis","aspectRatio","flexDirection","flexWrap","alignSelf","alignItems","alignContent","justifyContent","overflow","display","margin","marginVertical","marginHorizontal","marginStart","marginEnd","marginTop","marginBottom","marginLeft","marginRight","padding","paddingVertical","paddingHorizontal","paddingStart","paddingEnd","paddingTop","paddingBottom","paddingLeft","paddingRight","borderWidth","borderStartWidth","borderEndWidth","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","start","end","left","right","top","bottom","position","style","ReactNativeStyleAttributes","validAttributesForEventProps","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onResponderGrant","onResponderReject","onResponderStart","onResponderEnd","onResponderRelease","onResponderMove","onResponderTerminate","onResponderTerminationRequest","onShouldBlockNativeResponder","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onPointerEnter","onPointerLeave","onPointerMove","PlatformBaseViewConfigAndroid","validAttributes","getRuntimeConfig","setRuntimeConfigProvider","runtimeConfigProvider","invariant","get","name","viewConfigProvider","ReactNativeViewConfigRegistry","register","native","strict","verify","viewConfig","getNativeComponentAttributes","createViewConfig","nativeViewConfig","staticViewConfig","validationOutput","StaticViewConfigValidator","validate","type","console","error","stringifyValidationResult","verifyComponentAttributeEquivalence","getWithFallback_DEPRECATED","hasNativeViewConfig","FallbackNativeComponent","props","displayName","UIManager","getViewManagerConfig","unstable_hasStaticViewConfig","PlatformBaseViewConfig","BaseViewConfig","differences","accumulateDifferences","uiViewClassName","length","validationResult","map","difference","path","join","nativeObject","staticObject","nativeKey","nativeValue","hasOwnProperty","push","staticValue","nativeValueIfObject","ifObject","staticValueIfObject","pop","staticKey","isIgnored","value","Array","isArray","partialViewConfig","Commands","composeIndexers","maybeA","maybeB","ignoredViewConfigProps","WeakSet","object","add","ConditionallyIgnoredEventHandlers","Platform","OS","global","RN$ViewConfigEventValidAttributesDisabled","undefined","has","customBubblingEventTypes","customDirectEventTypes","exports","viewConfigCallbacks","Map","viewConfigs","processEventTypes","__DEV__","topLevelType","callback","set","test","IGNORED_KEYS","prop","diff","Object","keys","lefthandObjectDiff","leftObj","rightObj","differentKeys","compare","leftItem","rightItem","key","objDiff","includes","getConfigWithoutViewProps","propName","filter","reduce","obj","stringifyViewConfig","JSON","stringify","val"],"sourceRoot":""}