(self["webpackChunkfarmerLead"] = self["webpackChunkfarmerLead"] || []).push([["vendors-node_modules_react-native_Libraries_ReactNative_getNativeComponentAttributes_js"],{

/***/ "./node_modules/react-native/Libraries/Image/resolveAssetSource.js":
/*!*************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Image/resolveAssetSource.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var AssetRegistry=__webpack_require__(/*! @react-native/assets/registry */ "webpack/sharing/consume/default/@react-native/assets/registry/@react-native/assets/registry");var AssetSourceResolver=__webpack_require__(/*! ./AssetSourceResolver */ "./node_modules/react-native/Libraries/Image/AssetSourceResolver.js");var _require=__webpack_require__(/*! ./AssetUtils */ "./node_modules/react-native/Libraries/Image/AssetUtils.js"),pickScale=_require.pickScale;var _customSourceTransformer,_serverURL,_scriptURL;var _sourceCodeScriptURL;function getSourceCodeScriptURL(){if(_sourceCodeScriptURL){return _sourceCodeScriptURL;}var sourceCode=__webpack_require__.g.nativeExtensions&&__webpack_require__.g.nativeExtensions.SourceCode;if(!sourceCode){sourceCode=(__webpack_require__(/*! ../NativeModules/specs/NativeSourceCode */ "./node_modules/react-native/Libraries/NativeModules/specs/NativeSourceCode.js")["default"]);}_sourceCodeScriptURL=sourceCode.getConstants().scriptURL;return _sourceCodeScriptURL;}function getDevServerURL(){if(_serverURL===undefined){var sourceCodeScriptURL=getSourceCodeScriptURL();var match=sourceCodeScriptURL&&sourceCodeScriptURL.match(/^https?:\/\/.*?\//);if(match){_serverURL=match[0];}else{_serverURL=null;}}return _serverURL;}function _coerceLocalScriptURL(scriptURL){if(scriptURL){if(scriptURL.startsWith('assets://')){return null;}scriptURL=scriptURL.substring(0,scriptURL.lastIndexOf('/')+1);if(!scriptURL.includes('://')){scriptURL='file://'+scriptURL;}}return scriptURL;}function getScriptURL(){if(_scriptURL===undefined){_scriptURL=_coerceLocalScriptURL(getSourceCodeScriptURL());}return _scriptURL;}function setCustomSourceTransformer(transformer){_customSourceTransformer=transformer;}function resolveAssetSource(source){if(typeof source==='object'){return source;}var asset=AssetRegistry.getAssetByID(source);if(!asset){return null;}var resolver=new AssetSourceResolver(getDevServerURL(),getScriptURL(),asset);if(_customSourceTransformer){return _customSourceTransformer(resolver);}return resolver.defaultAsset();}module.exports=resolveAssetSource;module.exports.pickScale=pickScale;module.exports.setCustomSourceTransformer=setCustomSourceTransformer;

/***/ }),

/***/ "./node_modules/react-native/Libraries/NativeModules/specs/NativeSourceCode.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/NativeModules/specs/NativeSourceCode.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({value:true}));exports["default"]=void 0;var TurboModuleRegistry=_interopRequireWildcard(__webpack_require__(/*! ../../TurboModule/TurboModuleRegistry */ "./node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var NativeModule=TurboModuleRegistry.getEnforcing('SourceCode');var constants=null;var NativeSourceCode={getConstants:function getConstants(){if(constants==null){constants=NativeModule.getConstants();}return constants;}};var _default=NativeSourceCode;exports["default"]=_default;

/***/ }),

/***/ "./node_modules/react-native/Libraries/ReactNative/BridgelessUIManager.js":
/*!********************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/BridgelessUIManager.js ***!
  \********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var _NativeComponentRegistryUnstable=__webpack_require__(/*! react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable */ "webpack/sharing/consume/default/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable");var errorMessageForMethod=function errorMessageForMethod(methodName){return"[ReactNative Architecture][JS] '"+methodName+"' is not available in the new React Native architecture.";};module.exports={getViewManagerConfig:function getViewManagerConfig(viewManagerName){console.error(errorMessageForMethod('getViewManagerConfig')+'Use hasViewManagerConfig instead. viewManagerName: '+viewManagerName);return null;},hasViewManagerConfig:function hasViewManagerConfig(viewManagerName){return(0,_NativeComponentRegistryUnstable.unstable_hasComponent)(viewManagerName);},getConstants:function getConstants(){console.error(errorMessageForMethod('getConstants'));return{};},getConstantsForViewManager:function getConstantsForViewManager(viewManagerName){console.error(errorMessageForMethod('getConstantsForViewManager'));return{};},getDefaultEventTypes:function getDefaultEventTypes(){console.error(errorMessageForMethod('getDefaultEventTypes'));return[];},lazilyLoadView:function lazilyLoadView(name){console.error(errorMessageForMethod('lazilyLoadView'));return{};},createView:function createView(reactTag,viewName,rootTag,props){return console.error(errorMessageForMethod('createView'));},updateView:function updateView(reactTag,viewName,props){return console.error(errorMessageForMethod('updateView'));},focus:function focus(reactTag){return console.error(errorMessageForMethod('focus'));},blur:function blur(reactTag){return console.error(errorMessageForMethod('blur'));},findSubviewIn:function findSubviewIn(reactTag,point,callback){return console.error(errorMessageForMethod('findSubviewIn'));},dispatchViewManagerCommand:function dispatchViewManagerCommand(reactTag,commandID,commandArgs){return console.error(errorMessageForMethod('dispatchViewManagerCommand'));},measure:function measure(reactTag,callback){return console.error(errorMessageForMethod('measure'));},measureInWindow:function measureInWindow(reactTag,callback){return console.error(errorMessageForMethod('measureInWindow'));},viewIsDescendantOf:function viewIsDescendantOf(reactTag,ancestorReactTag,callback){return console.error(errorMessageForMethod('viewIsDescendantOf'));},measureLayout:function measureLayout(reactTag,ancestorReactTag,errorCallback,callback){return console.error(errorMessageForMethod('measureLayout'));},measureLayoutRelativeToParent:function measureLayoutRelativeToParent(reactTag,errorCallback,callback){return console.error(errorMessageForMethod('measureLayoutRelativeToParent'));},setJSResponder:function setJSResponder(reactTag,blockNativeResponder){return console.error(errorMessageForMethod('setJSResponder'));},clearJSResponder:function clearJSResponder(){},configureNextLayoutAnimation:function configureNextLayoutAnimation(config,callback,errorCallback){return console.error(errorMessageForMethod('configureNextLayoutAnimation'));},removeSubviewsFromContainerWithID:function removeSubviewsFromContainerWithID(containerID){return console.error(errorMessageForMethod('removeSubviewsFromContainerWithID'));},replaceExistingNonRootView:function replaceExistingNonRootView(reactTag,newReactTag){return console.error(errorMessageForMethod('replaceExistingNonRootView'));},setChildren:function setChildren(containerTag,reactTags){return console.error(errorMessageForMethod('setChildren'));},manageChildren:function manageChildren(containerTag,moveFromIndices,moveToIndices,addChildReactTags,addAtIndices,removeAtIndices){return console.error(errorMessageForMethod('manageChildren'));},setLayoutAnimationEnabledExperimental:function setLayoutAnimationEnabledExperimental(enabled){console.error(errorMessageForMethod('setLayoutAnimationEnabledExperimental'));},sendAccessibilityEvent:function sendAccessibilityEvent(reactTag,eventType){return console.error(errorMessageForMethod('sendAccessibilityEvent'));},showPopupMenu:function showPopupMenu(reactTag,items,error,success){return console.error(errorMessageForMethod('showPopupMenu'));},dismissPopupMenu:function dismissPopupMenu(){return console.error(errorMessageForMethod('dismissPopupMenu'));}};

/***/ }),

/***/ "./node_modules/react-native/Libraries/ReactNative/NativeUIManager.js":
/*!****************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/NativeUIManager.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({value:true}));exports["default"]=void 0;var TurboModuleRegistry=_interopRequireWildcard(__webpack_require__(/*! ../TurboModule/TurboModuleRegistry */ "./node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var _default=TurboModuleRegistry.getEnforcing('UIManager');exports["default"]=_default;

/***/ }),

/***/ "./node_modules/react-native/Libraries/ReactNative/PaperUIManager.js":
/*!***************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/PaperUIManager.js ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _interopRequireDefault=__webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _NativeUIManager=_interopRequireDefault(__webpack_require__(/*! ./NativeUIManager */ "./node_modules/react-native/Libraries/ReactNative/NativeUIManager.js"));var NativeModules=__webpack_require__(/*! ../BatchedBridge/NativeModules */ "./node_modules/react-native/Libraries/BatchedBridge/NativeModules.js");var defineLazyObjectProperty=__webpack_require__(/*! ../Utilities/defineLazyObjectProperty */ "./node_modules/react-native/Libraries/Utilities/defineLazyObjectProperty.js");var Platform=__webpack_require__(/*! ../Utilities/Platform */ "./node_modules/react-native/Libraries/Utilities/Platform.android.js");var UIManagerProperties=__webpack_require__(/*! ./UIManagerProperties */ "./node_modules/react-native/Libraries/ReactNative/UIManagerProperties.js");var viewManagerConfigs={};var triedLoadingConfig=new Set();var NativeUIManagerConstants={};var isNativeUIManagerConstantsSet=false;function _getConstants(){if(!isNativeUIManagerConstantsSet){NativeUIManagerConstants=_NativeUIManager.default.getConstants();isNativeUIManagerConstantsSet=true;}return NativeUIManagerConstants;}function _getViewManagerConfig(viewManagerName){if(viewManagerConfigs[viewManagerName]===undefined&&__webpack_require__.g.nativeCallSyncHook&&_NativeUIManager.default.getConstantsForViewManager){try{viewManagerConfigs[viewManagerName]=_NativeUIManager.default.getConstantsForViewManager(viewManagerName);}catch(e){console.error("NativeUIManager.getConstantsForViewManager('"+viewManagerName+"') threw an exception.",e);viewManagerConfigs[viewManagerName]=null;}}var config=viewManagerConfigs[viewManagerName];if(config){return config;}if(!__webpack_require__.g.nativeCallSyncHook){return config;}if(_NativeUIManager.default.lazilyLoadView&&!triedLoadingConfig.has(viewManagerName)){var result=_NativeUIManager.default.lazilyLoadView(viewManagerName);triedLoadingConfig.add(viewManagerName);if(result!=null&&result.viewConfig!=null){_getConstants()[viewManagerName]=result.viewConfig;lazifyViewManagerConfig(viewManagerName);}}return viewManagerConfigs[viewManagerName];}var UIManagerJS=Object.assign({},_NativeUIManager.default,{createView:function createView(reactTag,viewName,rootTag,props){if(Platform.OS==='ios'&&viewManagerConfigs[viewName]===undefined){_getViewManagerConfig(viewName);}_NativeUIManager.default.createView(reactTag,viewName,rootTag,props);},getConstants:function getConstants(){return _getConstants();},getViewManagerConfig:function getViewManagerConfig(viewManagerName){return _getViewManagerConfig(viewManagerName);},hasViewManagerConfig:function hasViewManagerConfig(viewManagerName){return _getViewManagerConfig(viewManagerName)!=null;}});_NativeUIManager.default.getViewManagerConfig=UIManagerJS.getViewManagerConfig;function lazifyViewManagerConfig(viewName){var viewConfig=_getConstants()[viewName];viewManagerConfigs[viewName]=viewConfig;if(viewConfig.Manager){defineLazyObjectProperty(viewConfig,'Constants',{get:function get(){var viewManager=NativeModules[viewConfig.Manager];var constants={};viewManager&&Object.keys(viewManager).forEach(function(key){var value=viewManager[key];if(typeof value!=='function'){constants[key]=value;}});return constants;}});defineLazyObjectProperty(viewConfig,'Commands',{get:function get(){var viewManager=NativeModules[viewConfig.Manager];var commands={};var index=0;viewManager&&Object.keys(viewManager).forEach(function(key){var value=viewManager[key];if(typeof value==='function'){commands[key]=index++;}});return commands;}});}}if(Platform.OS==='ios'){Object.keys(_getConstants()).forEach(function(viewName){lazifyViewManagerConfig(viewName);});}else if(_getConstants().ViewManagerNames){_NativeUIManager.default.getConstants().ViewManagerNames.forEach(function(viewManagerName){defineLazyObjectProperty(_NativeUIManager.default,viewManagerName,{get:function get(){return _NativeUIManager.default.getConstantsForViewManager(viewManagerName);}});});}if(!__webpack_require__.g.nativeCallSyncHook){Object.keys(_getConstants()).forEach(function(viewManagerName){if(!UIManagerProperties.includes(viewManagerName)){if(!viewManagerConfigs[viewManagerName]){viewManagerConfigs[viewManagerName]=_getConstants()[viewManagerName];}defineLazyObjectProperty(_NativeUIManager.default,viewManagerName,{get:function get(){console.warn("Accessing view manager configs directly off UIManager via UIManager['"+viewManagerName+"'] "+("is no longer supported. Use UIManager.getViewManagerConfig('"+viewManagerName+"') instead."));return UIManagerJS.getViewManagerConfig(viewManagerName);}});}});}module.exports=UIManagerJS;

/***/ }),

/***/ "./node_modules/react-native/Libraries/ReactNative/UIManager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/UIManager.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var UIManager=__webpack_require__.g.RN$Bridgeless===true?__webpack_require__(/*! ./BridgelessUIManager */ "./node_modules/react-native/Libraries/ReactNative/BridgelessUIManager.js"):__webpack_require__(/*! ./PaperUIManager */ "./node_modules/react-native/Libraries/ReactNative/PaperUIManager.js");module.exports=UIManager;

/***/ }),

/***/ "./node_modules/react-native/Libraries/ReactNative/UIManagerProperties.js":
/*!********************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/UIManagerProperties.js ***!
  \********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports=['clearJSResponder','configureNextLayoutAnimation','createView','dismissPopupMenu','dispatchViewManagerCommand','findSubviewIn','getConstantsForViewManager','getDefaultEventTypes','manageChildren','measure','measureInWindow','measureLayout','measureLayoutRelativeToParent','removeRootView','removeSubviewsFromContainerWithID','replaceExistingNonRootView','sendAccessibilityEvent','setChildren','setJSResponder','setLayoutAnimationEnabledExperimental','showPopupMenu','updateView','viewIsDescendantOf','PopupMenu','LazyViewManagersEnabled','ViewManagerNames','StyleConstants','AccessibilityEventTypes','UIView','getViewManagerConfig','hasViewManagerConfig','blur','focus','genericBubblingEventTypes','genericDirectEventTypes','lazilyLoadView'];

/***/ }),

/***/ "./node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js ***!
  \*****************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var ReactNativeStyleAttributes=__webpack_require__(/*! ../Components/View/ReactNativeStyleAttributes */ "./node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js");var resolveAssetSource=__webpack_require__(/*! ../Image/resolveAssetSource */ "./node_modules/react-native/Libraries/Image/resolveAssetSource.js");var processColor=__webpack_require__(/*! ../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js");var processColorArray=__webpack_require__(/*! ../StyleSheet/processColorArray */ "./node_modules/react-native/Libraries/StyleSheet/processColorArray.js");var insetsDiffer=__webpack_require__(/*! ../Utilities/differ/insetsDiffer */ "./node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js");var matricesDiffer=__webpack_require__(/*! ../Utilities/differ/matricesDiffer */ "./node_modules/react-native/Libraries/Utilities/differ/matricesDiffer.js");var pointsDiffer=__webpack_require__(/*! ../Utilities/differ/pointsDiffer */ "./node_modules/react-native/Libraries/Utilities/differ/pointsDiffer.js");var sizesDiffer=__webpack_require__(/*! ../Utilities/differ/sizesDiffer */ "./node_modules/react-native/Libraries/Utilities/differ/sizesDiffer.js");var UIManager=__webpack_require__(/*! ./UIManager */ "./node_modules/react-native/Libraries/ReactNative/UIManager.js");var invariant=__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js");function getNativeComponentAttributes(uiViewClassName){var _bubblingEventTypes,_directEventTypes;var viewConfig=UIManager.getViewManagerConfig(uiViewClassName);invariant(viewConfig!=null&&viewConfig.NativeProps!=null,'requireNativeComponent: "%s" was not found in the UIManager.',uiViewClassName);var baseModuleName=viewConfig.baseModuleName,bubblingEventTypes=viewConfig.bubblingEventTypes,directEventTypes=viewConfig.directEventTypes;var nativeProps=viewConfig.NativeProps;bubblingEventTypes=(_bubblingEventTypes=bubblingEventTypes)!=null?_bubblingEventTypes:{};directEventTypes=(_directEventTypes=directEventTypes)!=null?_directEventTypes:{};while(baseModuleName){var baseModule=UIManager.getViewManagerConfig(baseModuleName);if(!baseModule){baseModuleName=null;}else{bubblingEventTypes=Object.assign({},baseModule.bubblingEventTypes,bubblingEventTypes);directEventTypes=Object.assign({},baseModule.directEventTypes,directEventTypes);nativeProps=Object.assign({},baseModule.NativeProps,nativeProps);baseModuleName=baseModule.baseModuleName;}}var validAttributes={};for(var key in nativeProps){var typeName=nativeProps[key];var diff=getDifferForType(typeName);var process=getProcessorForType(typeName);validAttributes[key]=diff==null?process==null?true:{process:process}:process==null?{diff:diff}:{diff:diff,process:process};}validAttributes.style=ReactNativeStyleAttributes;Object.assign(viewConfig,{uiViewClassName:uiViewClassName,validAttributes:validAttributes,bubblingEventTypes:bubblingEventTypes,directEventTypes:directEventTypes});attachDefaultEventTypes(viewConfig);return viewConfig;}function attachDefaultEventTypes(viewConfig){var constants=UIManager.getConstants();if(constants.ViewManagerNames||constants.LazyViewManagersEnabled){viewConfig=merge(viewConfig,UIManager.getDefaultEventTypes());}else{viewConfig.bubblingEventTypes=merge(viewConfig.bubblingEventTypes,constants.genericBubblingEventTypes);viewConfig.directEventTypes=merge(viewConfig.directEventTypes,constants.genericDirectEventTypes);}}function merge(destination,source){if(!source){return destination;}if(!destination){return source;}for(var key in source){if(!source.hasOwnProperty(key)){continue;}var sourceValue=source[key];if(destination.hasOwnProperty(key)){var destinationValue=destination[key];if(typeof sourceValue==='object'&&typeof destinationValue==='object'){sourceValue=merge(destinationValue,sourceValue);}}destination[key]=sourceValue;}return destination;}function getDifferForType(typeName){switch(typeName){case'CATransform3D':return matricesDiffer;case'CGPoint':return pointsDiffer;case'CGSize':return sizesDiffer;case'UIEdgeInsets':return insetsDiffer;case'Point':return pointsDiffer;case'EdgeInsets':return insetsDiffer;}return null;}function getProcessorForType(typeName){switch(typeName){case'CGColor':case'UIColor':return processColor;case'CGColorArray':case'UIColorArray':return processColorArray;case'CGImage':case'UIImage':case'RCTImageSource':return resolveAssetSource;case'Color':return processColor;case'ColorArray':return processColorArray;case'ImageSource':return resolveAssetSource;}return null;}module.exports=getNativeComponentAttributes;

/***/ }),

/***/ "./node_modules/react-native/Libraries/StyleSheet/processColorArray.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/StyleSheet/processColorArray.js ***!
  \*****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
var _interopRequireDefault=__webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _processColor=_interopRequireDefault(__webpack_require__(/*! ./processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js"));var TRANSPARENT=0;function processColorArray(colors){return colors==null?null:colors.map(processColorElement);}function processColorElement(color){var value=(0,_processColor.default)(color);if(value==null){console.error('Invalid value in color array:',color);return TRANSPARENT;}return value;}module.exports=processColorArray;

/***/ }),

/***/ "./node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Utilities/differ/insetsDiffer.js ***!
  \******************************************************************************/
/***/ (function(module) {

"use strict";
var dummyInsets={top:undefined,left:undefined,right:undefined,bottom:undefined};var insetsDiffer=function insetsDiffer(one,two){one=one||dummyInsets;two=two||dummyInsets;return one!==two&&(one.top!==two.top||one.left!==two.left||one.right!==two.right||one.bottom!==two.bottom);};module.exports=insetsDiffer;

/***/ }),

/***/ "./node_modules/react-native/Libraries/Utilities/differ/matricesDiffer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Utilities/differ/matricesDiffer.js ***!
  \********************************************************************************/
/***/ (function(module) {

"use strict";
var matricesDiffer=function matricesDiffer(one,two){if(one===two){return false;}return!one||!two||one[12]!==two[12]||one[13]!==two[13]||one[14]!==two[14]||one[5]!==two[5]||one[10]!==two[10]||one[0]!==two[0]||one[1]!==two[1]||one[2]!==two[2]||one[3]!==two[3]||one[4]!==two[4]||one[6]!==two[6]||one[7]!==two[7]||one[8]!==two[8]||one[9]!==two[9]||one[11]!==two[11]||one[15]!==two[15];};module.exports=matricesDiffer;

/***/ }),

/***/ "./node_modules/react-native/Libraries/Utilities/differ/pointsDiffer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Utilities/differ/pointsDiffer.js ***!
  \******************************************************************************/
/***/ (function(module) {

"use strict";
var dummyPoint={x:undefined,y:undefined};var pointsDiffer=function pointsDiffer(one,two){one=one||dummyPoint;two=two||dummyPoint;return one!==two&&(one.x!==two.x||one.y!==two.y);};module.exports=pointsDiffer;

/***/ })

}]);//# sourceMappingURL=vendors-node_modules_react-native_Libraries_ReactNative_getNativeComponentAttributes_js.chunk.bundle.map?platform=android