{"version":3,"file":"node_modules_react-native_Libraries_Animated_Easing_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/Animated/Easing.js","webpack:///./node_modules/react-native/Libraries/Animated/bezier.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nlet ease;\n\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the\n *   object goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\nconst Easing = {\n  /**\n   * A stepping function, returns 1 for any positive value of `n`.\n   */\n  step0(n: number): number {\n    return n > 0 ? 1 : 0;\n  },\n\n  /**\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\n   */\n  step1(n: number): number {\n    return n >= 1 ? 1 : 0;\n  },\n\n  /**\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n   * one.\n   *\n   * http://cubic-bezier.com/#0,0,1,1\n   */\n  linear(t: number): number {\n    return t;\n  },\n\n  /**\n   * A simple inertial interaction, similar to an object slowly accelerating to\n   * speed.\n   *\n   * http://cubic-bezier.com/#.42,0,1,1\n   */\n  ease(t: number): number {\n    if (!ease) {\n      ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n    return ease(t);\n  },\n\n  /**\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInQuad\n   */\n  quad(t: number): number {\n    return t * t;\n  },\n\n  /**\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInCubic\n   */\n  cubic(t: number): number {\n    return t * t * t;\n  },\n\n  /**\n   * A power function. Position is equal to the Nth power of elapsed time.\n   *\n   * n = 4: http://easings.net/#easeInQuart\n   * n = 5: http://easings.net/#easeInQuint\n   */\n  poly(n: number): (t: number) => number {\n    return (t: number) => Math.pow(t, n);\n  },\n\n  /**\n   * A sinusoidal function.\n   *\n   * http://easings.net/#easeInSine\n   */\n  sin(t: number): number {\n    return 1 - Math.cos((t * Math.PI) / 2);\n  },\n\n  /**\n   * A circular function.\n   *\n   * http://easings.net/#easeInCirc\n   */\n  circle(t: number): number {\n    return 1 - Math.sqrt(1 - t * t);\n  },\n\n  /**\n   * An exponential function.\n   *\n   * http://easings.net/#easeInExpo\n   */\n  exp(t: number): number {\n    return Math.pow(2, 10 * (t - 1));\n  },\n\n  /**\n   * A simple elastic interaction, similar to a spring oscillating back and\n   * forth.\n   *\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\n   * times.\n   *\n   * http://easings.net/#easeInElastic\n   */\n  elastic(bounciness: number = 1): (t: number) => number {\n    const p = bounciness * Math.PI;\n    return t => 1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\n  },\n\n  /**\n   * Use with `Animated.parallel()` to create a simple effect where the object\n   * animates back slightly as the animation starts.\n   *\n   * https://easings.net/#easeInBack\n   */\n  back(s: number = 1.70158): (t: number) => number {\n    return t => t * t * ((s + 1) * t - s);\n  },\n\n  /**\n   * Provides a simple bouncing effect.\n   *\n   * http://easings.net/#easeInBounce\n   */\n  bounce(t: number): number {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      const t2 = t - 1.5 / 2.75;\n      return 7.5625 * t2 * t2 + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      const t2 = t - 2.25 / 2.75;\n      return 7.5625 * t2 * t2 + 0.9375;\n    }\n\n    const t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  },\n\n  /**\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\n   * `transition-timing-function`.\n   *\n   * A useful tool to visualize cubic bezier curves can be found at\n   * http://cubic-bezier.com/\n   */\n  bezier(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n  ): (t: number) => number {\n    const _bezier = require('./bezier');\n    return _bezier(x1, y1, x2, y2);\n  },\n\n  /**\n   * Runs an easing function forwards.\n   */\n  in(easing: (t: number) => number): (t: number) => number {\n    return easing;\n  },\n\n  /**\n   * Runs an easing function backwards.\n   */\n  out(easing: (t: number) => number): (t: number) => number {\n    return t => 1 - easing(1 - t);\n  },\n\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n  inOut(easing: (t: number) => number): (t: number) => number {\n    return t => {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  },\n};\n\nmodule.exports = Easing;\n","/**\n * Portions Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n/**\n * BezierEasing - use bezier curve for transition easing function\n * https://github.com/gre/bezier-easing\n * @copyright 2014-2015 Gaëtan Renaudeau. MIT License.\n */\n\n'use strict';\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nconst NEWTON_ITERATIONS = 4;\nconst NEWTON_MIN_SLOPE = 0.001;\nconst SUBDIVISION_PRECISION = 0.0000001;\nconst SUBDIVISION_MAX_ITERATIONS = 10;\n\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nconst float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A(aA1: number, aA2: number) {\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n}\nfunction B(aA1: number, aA2: number) {\n  return 3.0 * aA2 - 6.0 * aA1;\n}\nfunction C(aA1: number) {\n  return 3.0 * aA1;\n}\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier(aT: number, aA1: number, aA2: number) {\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n}\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope(aT: number, aA1: number, aA2: number) {\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n}\n\nfunction binarySubdivide(\n  aX: number,\n  _aA: number,\n  _aB: number,\n  mX1: number,\n  mX2: number,\n) {\n  let currentX,\n    currentT,\n    i = 0,\n    aA = _aA,\n    aB = _aB;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (\n    Math.abs(currentX) > SUBDIVISION_PRECISION &&\n    ++i < SUBDIVISION_MAX_ITERATIONS\n  );\n  return currentT;\n}\n\nfunction newtonRaphsonIterate(\n  aX: number,\n  _aGuessT: number,\n  mX1: number,\n  mX2: number,\n) {\n  let aGuessT = _aGuessT;\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n    const currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\n\nmodule.exports = function bezier(\n  mX1: number,\n  mY1: number,\n  mX2: number,\n  mY2: number,\n): (x: number) => number {\n  if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  // Precompute samples table\n  const sampleValues = float32ArraySupported\n    ? new Float32Array(kSplineTableSize)\n    : new Array(kSplineTableSize);\n  if (mX1 !== mY1 || mX2 !== mY2) {\n    for (let i = 0; i < kSplineTableSize; ++i) {\n      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  function getTForX(aX: number) {\n    let intervalStart = 0.0;\n    let currentSample = 1;\n    const lastSample = kSplineTableSize - 1;\n\n    for (\n      ;\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\n      ++currentSample\n    ) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    const dist =\n      (aX - sampleValues[currentSample]) /\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    const guessForT = intervalStart + dist * kSampleStepSize;\n\n    const initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(\n        aX,\n        intervalStart,\n        intervalStart + kSampleStepSize,\n        mX1,\n        mX2,\n      );\n    }\n  }\n\n  return function BezierEasing(x: number): number {\n    if (mX1 === mY1 && mX2 === mY2) {\n      return x; // linear\n    }\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n"],"names":["ease","Easing","step0","n","step1","linear","t","bezier","quad","cubic","poly","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","p","back","s","bounce","t2","x1","y1","x2","y2","_bezier","require","in","easing","out","inOut","module","exports","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","Float32Array","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","_aA","_aB","mX1","mX2","currentX","currentT","i","aA","aB","abs","newtonRaphsonIterate","_aGuessT","aGuessT","currentSlope","mY1","mY2","Error","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","BezierEasing","x"],"sourceRoot":""}